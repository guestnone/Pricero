// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pricero.Core.Db;

namespace Pricero.Core.Db.Migrations
{
    [DbContext(typeof(PriceroDBContext))]
    [Migration("20200123150850_MessageMigration")]
    partial class MessageMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("Pricero.Core.Db.Chain", b =>
                {
                    b.Property<int>("ChainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChainName")
                        .HasColumnType("TEXT");

                    b.HasKey("ChainId");

                    b.ToTable("Chains");
                });

            modelBuilder.Entity("Pricero.Core.Db.ChainProduct", b =>
                {
                    b.Property<int>("ChainProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChainId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DiscountId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int?>("ProductID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChainProductID");

                    b.HasIndex("ChainId");

                    b.HasIndex("DiscountId")
                        .IsUnique();

                    b.HasIndex("ProductID");

                    b.ToTable("ChainProducts");
                });

            modelBuilder.Entity("Pricero.Core.Db.Discount", b =>
                {
                    b.Property<int>("DiscountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DiscountFrom")
                        .HasColumnType("TEXT");

                    b.Property<double>("DiscountPrice")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DiscountTo")
                        .HasColumnType("TEXT");

                    b.HasKey("DiscountID");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Pricero.Core.Db.FavouriteProduct", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("FavouriteProducts");
                });

            modelBuilder.Entity("Pricero.Core.Db.FavouriteShop", b =>
                {
                    b.Property<int>("ShopID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShopID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("FavouriteShops");
                });

            modelBuilder.Entity("Pricero.Core.Db.ForumThread", b =>
                {
                    b.Property<int>("ThreadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SectionID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ThreadDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThreadTitle")
                        .HasColumnType("TEXT");

                    b.HasKey("ThreadID");

                    b.HasIndex("SectionID");

                    b.ToTable("ForumThreads");
                });

            modelBuilder.Entity("Pricero.Core.Db.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MessageContent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("MessageReceiverId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessageSenderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MessageID");

                    b.HasIndex("MessageReceiverId");

                    b.HasIndex("MessageSenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Pricero.Core.Db.PriceReport", b =>
                {
                    b.Property<int>("ReportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChainProductID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReportContent")
                        .HasColumnType("TEXT");

                    b.HasKey("ReportID");

                    b.HasIndex("ChainProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("PriceReports");
                });

            modelBuilder.Entity("Pricero.Core.Db.Producer", b =>
                {
                    b.Property<int>("ProducerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProducerCountry")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProducerNIP")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProducerName")
                        .HasColumnType("TEXT");

                    b.HasKey("ProducerID");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("Pricero.Core.Db.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProducerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductGroupID")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.Property<double>("ProductWeight")
                        .HasColumnType("REAL");

                    b.Property<string>("UpcCode")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductID");

                    b.HasIndex("ProducerID");

                    b.HasIndex("ProductGroupID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Pricero.Core.Db.ProductGroup", b =>
                {
                    b.Property<string>("ProductGroupID")
                        .HasColumnType("TEXT");

                    b.Property<double>("BaseVATCharge")
                        .HasColumnType("REAL");

                    b.HasKey("ProductGroupID");

                    b.ToTable("ProductGroups");
                });

            modelBuilder.Entity("Pricero.Core.Db.Section", b =>
                {
                    b.Property<int>("SectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SectionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SectionTitle")
                        .HasColumnType("TEXT");

                    b.HasKey("SectionID");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("Pricero.Core.Db.Shop", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChainId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShopId");

                    b.HasIndex("ChainId");

                    b.HasIndex("UserId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("Pricero.Core.Db.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nickname")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserType")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pricero.Core.Db.UserPost", b =>
                {
                    b.Property<int>("PostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostContent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ThreadID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PostID");

                    b.HasIndex("ThreadID");

                    b.HasIndex("UserId");

                    b.ToTable("UserPosts");
                });

            modelBuilder.Entity("Pricero.Core.Db.ChainProduct", b =>
                {
                    b.HasOne("Pricero.Core.Db.Chain", "Chain")
                        .WithMany()
                        .HasForeignKey("ChainId");

                    b.HasOne("Pricero.Core.Db.Discount", "Discount")
                        .WithOne("ChainProduct")
                        .HasForeignKey("Pricero.Core.Db.ChainProduct", "DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pricero.Core.Db.Product", "Product")
                        .WithMany("ChainProducts")
                        .HasForeignKey("ProductID");
                });

            modelBuilder.Entity("Pricero.Core.Db.FavouriteProduct", b =>
                {
                    b.HasOne("Pricero.Core.Db.Product", "Product")
                        .WithMany("FavouriteProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pricero.Core.Db.User", "User")
                        .WithMany("FavouriteProducts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pricero.Core.Db.FavouriteShop", b =>
                {
                    b.HasOne("Pricero.Core.Db.Shop", "Shop")
                        .WithMany("FavouriteShops")
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pricero.Core.Db.User", "User")
                        .WithMany("FavouriteShops")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pricero.Core.Db.ForumThread", b =>
                {
                    b.HasOne("Pricero.Core.Db.Section", "Section")
                        .WithMany("Threads")
                        .HasForeignKey("SectionID");
                });

            modelBuilder.Entity("Pricero.Core.Db.Message", b =>
                {
                    b.HasOne("Pricero.Core.Db.User", "MessageReceiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("MessageReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pricero.Core.Db.User", "MessageSender")
                        .WithMany("SentMessages")
                        .HasForeignKey("MessageSenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pricero.Core.Db.PriceReport", b =>
                {
                    b.HasOne("Pricero.Core.Db.ChainProduct", "ChainProduct")
                        .WithMany("PriceReports")
                        .HasForeignKey("ChainProductID");

                    b.HasOne("Pricero.Core.Db.Product", null)
                        .WithMany("PriceReports")
                        .HasForeignKey("ProductID");
                });

            modelBuilder.Entity("Pricero.Core.Db.Product", b =>
                {
                    b.HasOne("Pricero.Core.Db.Producer", "Producer")
                        .WithMany("Products")
                        .HasForeignKey("ProducerID");

                    b.HasOne("Pricero.Core.Db.ProductGroup", "ProductGroup")
                        .WithMany("Products")
                        .HasForeignKey("ProductGroupID");
                });

            modelBuilder.Entity("Pricero.Core.Db.Shop", b =>
                {
                    b.HasOne("Pricero.Core.Db.Chain", "Chain")
                        .WithMany("Shops")
                        .HasForeignKey("ChainId");

                    b.HasOne("Pricero.Core.Db.User", null)
                        .WithMany("Shops")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Pricero.Core.Db.UserPost", b =>
                {
                    b.HasOne("Pricero.Core.Db.ForumThread", "Thread")
                        .WithMany("UserPosts")
                        .HasForeignKey("ThreadID");

                    b.HasOne("Pricero.Core.Db.User", "User")
                        .WithMany("UserPosts")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
